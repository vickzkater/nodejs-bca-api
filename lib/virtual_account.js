const BCA = require('./bca');

/**
 * BCA VirtualAccount Class
 */
class VirtualAccount extends BCA {
  /**
   * This service used by merchant to sent transaction data, and in return merchant will get PaymentID
   * @param {Object} param.body - Request body
   * @return {Promise<Object>} Promise resolved with successful action
   */
  async inquryStatusPayment({
    companyCode,
    customerNumber,
    requestId,
  }) {
    const queryParams = [
      `CompanyCode=${companyCode}`,
    ];
    if (customerNumber) {
      queryParams.push(`CustomerNumber=${customerNumber}`);
    }
    if (requestId) {
      queryParams.push(`RequestId=${requestId}`);
    }
    const relativeUrl = this.sortQueryParams(`/va/payments?${queryParams.join('&')}`);
    return this.request({
      method: 'GET',
      body: '',
      relativeUrl,
    });
  }

  /**
   * This service provided for merchant to get status of payment transaction
   * @param {String} param.merchantId - MerchantID is generated by BCA(numeric)
   * @param {String} param.paymentId - PaymentID is generated by BCA
   * @return {Promise<Object>} Promise resolved with successful action
   */
  async paymentStatus({
    merchantId,
    paymentId,
  }) {
    return this.request({
      method: 'GET',
      relativeUrl: `/sakuku-commerce/payments/${merchantId}/${paymentId}`,
      body: '',
    });
  }
}

module.exports = VirtualAccount;
