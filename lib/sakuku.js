const {
  format,
} = require('date-fns');
const BCA = require('./bca');

/**
 * BCA Sakuku Class
 */
class Sakuku extends BCA {
  /**
   * This service used by merchant to sent transaction data, and in return merchant will get PaymentID
   * @param {Object} param.body - Request body
   * @return {Promise<Object>} Promise resolved with successful action
   */
  async createPayment(body) {
    const timestamp = format(new Date(), this.config.timestampFormat);
    return this.request({
      method: 'POST',
      relativeUrl: '/sakuku-commerce/payments',
      body: JSON.stringify({
        ...body,
        RequestDate: timestamp,
      }),
    });
  }

  /**
   * This service provided for merchant to get status of payment transaction
   * @param {String} param.merchantId - MerchantID is generated by BCA(numeric)
   * @param {String} param.paymentId - PaymentID is generated by BCA
   * @return {Promise<Object>} Promise resolved with successful action
   */
  async paymentStatus({
    merchantId,
    paymentId,
  }) {
    return this.request({
      method: 'GET',
      relativeUrl: `/sakuku-commerce/payments/${merchantId}/${paymentId}`,
      body: '',
    });
  }
}

module.exports = Sakuku;
